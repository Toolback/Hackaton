/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VaultFacet,
  VaultFacetInterface,
} from "../../../proofOfLess/facets/VaultFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "deleteListedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMainPayingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getUserFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_questId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getUserLockedFundsByQuest",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "isTokenListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "listNewToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setNewMainPayingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "supplyFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a2e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c02d856511610066578063c02d856514610168578063c107532914610179578063ce06efd81461018c578063d5bee499146101bc578063e69ec653146101fd57600080fd5b80631f8e12011461009857806321c1e115146100c85780633a8ae44f1461010e57806343e80e3414610155575b600080fd5b6100ab6100a636600461080e565b610229565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fe6100d636600461080e565b6001600160a01b03166000908152601c60205260409020805460ff1916600190811790915590565b60405190151581526020016100bf565b61014761011c366004610830565b6001600160a01b039182166000908152601b6020908152604080832093909416825291909152205490565b6040519081526020016100bf565b610147610163366004610863565b6102ad565b601e546001600160a01b03166100ab565b610147610187366004610863565b61035b565b6100fe61019a36600461080e565b6001600160a01b03166000908152601c60205260408120805460ff1916905590565b6101476101ca36600461088d565b60009283526021602090815260408085206001600160a01b039485168652600e0182528085209290931684525290205490565b6100fe61020b36600461080e565b6001600160a01b03166000908152601c602052604090205460ff1690565b6001600160a01b0381166000908152601c602052604081205460ff16151560011461028e5760405162461bcd60e51b815260206004820152601060248201526f151bdad95b881b9bdd081b1a5cdd195960821b60448201526064015b60405180910390fd5b50601e80546001600160a01b0319166001600160a01b03831617905590565b6000806102b86104dc565b6001600160a01b0385166000908152601c60205260409020805460ff1916600117905590506102e984823086610539565b6001600160a01b038416600090815260196020526040812080548592906103119084906108df565b90915550506001600160a01b038082166000908152601b602090815260408083209388168352929052908120805485929061034d9084906108df565b918290555095945050505050565b6000806103666104dc565b6001600160a01b038082166000908152601b60209081526040808320938916835292905220549091508311156103ea5760405162461bcd60e51b8152602060048201526024808201527f5661756c74203a204e6f7420456e6f756768742046756e647320696e2042616c604482015263616e636560e01b6064820152608401610285565b6001600160a01b03841660009081526019602052604090205483111561045e5760405162461bcd60e51b8152602060048201526024808201527f5661756c74203a204e6f7420456e6f756768742046756e647320417661696c616044820152630313632960e51b6064820152608401610285565b6001600160a01b038416600090815260196020526040812080548592906104869084906108f7565b90915550506001600160a01b038082166000908152601b60209081526040808320938816835292905290812080548592906104c29084906108f7565b92505081905591506104d5848285610616565b5092915050565b60003330141561053357600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506105369050565b50335b90565b833b806105585760405162461bcd60e51b81526004016102859061090e565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908916916105bc9190610987565b6000604051808303816000865af19150503d80600081146105f9576040519150601f19603f3d011682016040523d82523d6000602084013e6105fe565b606091505b509150915061060d82826106ea565b50505050505050565b823b806106355760405162461bcd60e51b81526004016102859061090e565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908816916106919190610987565b6000604051808303816000865af19150503d80600081146106ce576040519150601f19603f3d011682016040523d82523d6000602084013e6106d3565b606091505b50915091506106e282826106ea565b505050505050565b811561077557805115610771578080602001905181019061070b91906109a3565b6107715760405162461bcd60e51b815260206004820152603160248201527f4c696245524332303a207472616e73666572206f72207472616e7366657246726044820152706f6d2072657475726e65642066616c736560781b6064820152608401610285565b5050565b805115610796578060405162461bcd60e51b815260040161028591906109c5565b60405162461bcd60e51b815260206004820152602b60248201527f4c696245524332303a207472616e73666572206f72207472616e73666572467260448201526a1bdb481c995d995c9d195960aa1b6064820152608401610285565b80356001600160a01b038116811461080957600080fd5b919050565b60006020828403121561082057600080fd5b610829826107f2565b9392505050565b6000806040838503121561084357600080fd5b61084c836107f2565b915061085a602084016107f2565b90509250929050565b6000806040838503121561087657600080fd5b61087f836107f2565b946020939093013593505050565b6000806000606084860312156108a257600080fd5b833592506108b2602085016107f2565b91506108c0604085016107f2565b90509250925092565b634e487b7160e01b600052601160045260246000fd5b600082198211156108f2576108f26108c9565b500190565b600082821015610909576109096108c9565b500390565b60208082526029908201527f4c696245524332303a20455243323020746f6b656e206164647265737320686160408201526873206e6f20636f646560b81b606082015260800190565b60005b8381101561097257818101518382015260200161095a565b83811115610981576000848401525b50505050565b60008251610999818460208701610957565b9190910192915050565b6000602082840312156109b557600080fd5b8151801515811461082957600080fd5b60208152600082518060208401526109e4816040850160208701610957565b601f01601f1916919091016040019291505056fea2646970667358221220a6541a7a591b6bcad6459fa95c0fa639961f19e991c805a6423d865cfb53b55d64736f6c634300080b0033";

type VaultFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultFacet__factory extends ContractFactory {
  constructor(...args: VaultFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VaultFacet> {
    return super.deploy(overrides || {}) as Promise<VaultFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultFacet {
    return super.attach(address) as VaultFacet;
  }
  override connect(signer: Signer): VaultFacet__factory {
    return super.connect(signer) as VaultFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultFacetInterface {
    return new utils.Interface(_abi) as VaultFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultFacet {
    return new Contract(address, _abi, signerOrProvider) as VaultFacet;
  }
}
