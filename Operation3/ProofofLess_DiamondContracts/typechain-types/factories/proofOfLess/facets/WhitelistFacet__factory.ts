/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WhitelistFacet,
  WhitelistFacetInterface,
} from "../../../proofOfLess/facets/WhitelistFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "whitelistId",
        type: "uint32",
      },
    ],
    name: "WhitelistCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "whitelistId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "WhitelistOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "whitelistId",
        type: "uint32",
      },
    ],
    name: "WhitelistUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_whitelistAddresses",
        type: "address[]",
      },
    ],
    name: "createWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_whitelistId",
        type: "uint32",
      },
    ],
    name: "getWhitelist",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "addresses",
            type: "address[]",
          },
        ],
        internalType: "struct Whitelist",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_whitelistId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_whitelistAddress",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_whitelistId",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "_whitelistAddresses",
        type: "address[]",
      },
    ],
    name: "removeAddressesFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_newId",
        type: "uint32",
      },
    ],
    name: "setDonutWhiteListId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_whitelistId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_whitelistOwner",
        type: "address",
      },
    ],
    name: "transferOwnershipOfWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_whitelistId",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "_whitelistAddresses",
        type: "address[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "whitelistId",
        type: "uint32",
      },
    ],
    name: "whitelistExists",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_whitelistId",
        type: "uint32",
      },
    ],
    name: "whitelistOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611145806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637c208cb7116100665780637c208cb71461014257806397d63e3b14610154578063d508d9a81461017e578063e67e990814610191578063ecf5f991146101cf57600080fd5b806309f0dd09146100a35780631dd6fdab146100b8578063243ce171146100cb5780636491601d146100f45780636d4962e514610117575b600080fd5b6100b66100b1366004610ccd565b6101e2565b005b6100b66100c6366004610d4c565b610295565b6100de6100d9366004610d9f565b61033d565b6040516100eb9190610dfe565b60405180910390f35b610107610102366004610d9f565b6104b3565b60405190151581526020016100eb565b61012a610125366004610d9f565b6104c4565b6040516001600160a01b0390911681526020016100eb565b6024545b6040519081526020016100eb565b610146610162366004610d9f565b6008805463ffffffff90921663ffffffff199092168217905590565b6100b661018c366004610e8c565b610504565b61014661019f366004610ccd565b63ffffffff821660009081526025602090815260408083206001600160a01b038516845290915290205492915050565b6100b66101dd366004610d4c565b6106eb565b6101eb8261075d565b6102105760405162461bcd60e51b815260040161020790610f23565b60405180910390fd5b61021982610787565b6102355760405162461bcd60e51b815260040161020790610f67565b6000610240836107b3565b80546001600160a01b0319166001600160a01b03841690811782556040519192509063ffffffff8516907f250c9a2c80b4a6539a440a03220336f427a4c6bde294534d97d89fba743449c490600090a3505050565b806102b25760405162461bcd60e51b815260040161020790610fab565b6102bb8361075d565b6102d75760405162461bcd60e51b815260040161020790610f23565b6102e083610787565b6102fc5760405162461bcd60e51b815260040161020790610f67565b610307838383610852565b60405163ffffffff8416907fe8d847d2ee36950513cba49d6ac0e0012bb3436d5ab55385e2d7a2834d96d9b790600090a2505050565b61036a604051806060016040528060006001600160a01b0316815260200160608152602001606081525090565b6103738261075d565b61038f5760405162461bcd60e51b815260040161020790610f23565b610398826107b3565b604080516060810190915281546001600160a01b031681526001820180549192916020840191906103c890611008565b80601f01602080910402602001604051908101604052809291908181526020018280546103f490611008565b80156104415780601f1061041657610100808354040283529160200191610441565b820191906000526020600020905b81548152906001019060200180831161042457829003601f168201915b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156104a357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610485575b5050505050815250509050919050565b60006104be8261075d565b92915050565b60006104cf8261075d565b6104eb5760405162461bcd60e51b815260040161020790610f23565b6104f4826107b3565b546001600160a01b031692915050565b806105215760405162461bcd60e51b815260040161020790610fab565b826105865760405162461bcd60e51b815260206004820152602f60248201527f57686974656c6973744661636574203a2057686974656c697374206e616d652060448201526e63616e6e6f7420626520626c616e6b60881b6064820152608401610207565b60006105906108a5565b90506060600060405180606001604052806105a96108be565b6001600160a01b0316815260200188888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505050602091820185905260248054600181018255915282517f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec4600390920291820180546001600160a01b0319166001600160a01b0390921691909117815583830151805194955085949193610687937f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec50192910190610baf565b50604082015180516106a3916002840191602090910190610c33565b5050506106b183868661091b565b60405163ffffffff8416907f333efbc104f53485a1ba651908877d70174cf47cbfe61260358bfcabfcfbec3590600090a250505050505050565b806107085760405162461bcd60e51b815260040161020790610fab565b6107118361075d565b61072d5760405162461bcd60e51b815260040161020790610f23565b61073683610787565b6107525760405162461bcd60e51b815260040161020790610f67565b61030783838361091b565b602454600090819063ffffffff841611801590610780575060008363ffffffff16115b9392505050565b600080610793836107b3565b905061079d6108be565b90546001600160a01b0390811691161492915050565b6000806107bf8361075d565b6108175760405162461bcd60e51b815260206004820152602360248201527f57686974656c69737446616365743a2057686974656c697374206e6f7420666f6044820152621d5b9960ea1b6064820152608401610207565b60248101610826600185611059565b63ffffffff168154811061083c5761083c61107e565b9060005260206000209060030201915050919050565b60005b8181101561089f5761088d848484848181106108735761087361107e565b90506020020160208101906108889190611094565b610968565b80610897816110af565b915050610855565b50505050565b60245460009081906108b89060016110ca565b91505090565b60003330141561091557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506109189050565b50335b90565b60005b8181101561089f576109568484848481811061093c5761093c61107e565b90506020020160208101906109519190611094565b610b1b565b80610960816110af565b91505061091e565b63ffffffff821660009081526025602090815260408083206001600160a01b038516845290915281205415610b165760006109a2846107b3565b63ffffffff8516600090815260258401602090815260408083206001600160a01b0388168452909152812054919250906109de906001906110e2565b60028301549091506000906109f5906001906110e2565b9050826002018181548110610a0c57610a0c61107e565b6000918252602090912001546002840180546001600160a01b039092169184908110610a3a57610a3a61107e565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000836002018281548110610a7f57610a7f61107e565b6000918252602090912001546002850180546001600160a01b0390921692509080610aac57610aac6110f9565b600082815260209020810160001990810180546001600160a01b0319169055019055610ad98360016110ca565b63ffffffff8816600090815260258701602090815260408083206001600160a01b0395861684529091528082209290925591871682528120555050505b505050565b63ffffffff821660009081526025602090815260408083206001600160a01b0385168452909152812054610b16576000610b54846107b3565b60020180546001810182556000828152602080822090920180546001600160a01b0319166001600160a01b03979097169687179055915463ffffffff9690961682526025939093018352604080822094825293909252502055565b828054610bbb90611008565b90600052602060002090601f016020900481019282610bdd5760008555610c23565b82601f10610bf657805160ff1916838001178555610c23565b82800160010185558215610c23579182015b82811115610c23578251825591602001919060010190610c08565b50610c2f929150610c88565b5090565b828054828255906000526020600020908101928215610c23579160200282015b82811115610c2357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610c53565b5b80821115610c2f5760008155600101610c89565b803563ffffffff81168114610cb157600080fd5b919050565b80356001600160a01b0381168114610cb157600080fd5b60008060408385031215610ce057600080fd5b610ce983610c9d565b9150610cf760208401610cb6565b90509250929050565b60008083601f840112610d1257600080fd5b50813567ffffffffffffffff811115610d2a57600080fd5b6020830191508360208260051b8501011115610d4557600080fd5b9250929050565b600080600060408486031215610d6157600080fd5b610d6a84610c9d565b9250602084013567ffffffffffffffff811115610d8657600080fd5b610d9286828701610d00565b9497909650939450505050565b600060208284031215610db157600080fd5b61078082610c9d565b600081518084526020808501945080840160005b83811015610df35781516001600160a01b031687529582019590820190600101610dce565b509495945050505050565b6000602080835260018060a01b03845116818401528084015160606040850152805180608086015260005b81811015610e455782810184015186820160a001528301610e29565b81811115610e5757600060a083880101525b50601f19601f82011685019250505060408401516080848303016060850152610e8360a0830182610dba565b95945050505050565b60008060008060408587031215610ea257600080fd5b843567ffffffffffffffff80821115610eba57600080fd5b818701915087601f830112610ece57600080fd5b813581811115610edd57600080fd5b886020828501011115610eef57600080fd5b602092830196509450908601359080821115610f0a57600080fd5b50610f1787828801610d00565b95989497509550505050565b60208082526024908201527f57686974656c6973744661636574203a2057686974656c697374206e6f7420666040820152631bdd5b9960e21b606082015260800190565b60208082526024908201527f57686974656c6973744661636574203a204e6f742077686974656c697374206f6040820152633bb732b960e11b606082015260800190565b6020808252603c908201527f57686974656c6973744661636574203a2057686974656c697374206c656e677460408201527f682073686f756c64206265206c6172676572207468616e207a65726f00000000606082015260800190565b600181811c9082168061101c57607f821691505b6020821081141561103d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8381169083168181101561107657611076611043565b039392505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156110a657600080fd5b61078082610cb6565b60006000198214156110c3576110c3611043565b5060010190565b600082198211156110dd576110dd611043565b500190565b6000828210156110f4576110f4611043565b500390565b634e487b7160e01b600052603160045260246000fdfea264697066735822122062c2728d451083878914b42d4c4e803bb1a4d89bacf23ce72c9fcff04d85b93964736f6c634300080b0033";

type WhitelistFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WhitelistFacet__factory extends ContractFactory {
  constructor(...args: WhitelistFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WhitelistFacet> {
    return super.deploy(overrides || {}) as Promise<WhitelistFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WhitelistFacet {
    return super.attach(address) as WhitelistFacet;
  }
  override connect(signer: Signer): WhitelistFacet__factory {
    return super.connect(signer) as WhitelistFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistFacetInterface {
    return new utils.Interface(_abi) as WhitelistFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistFacet {
    return new Contract(address, _abi, signerOrProvider) as WhitelistFacet;
  }
}
